import { IntDict } from './MetaType';

export class HijriDate {

  private readonly year: number;
  private readonly month: number;
  private readonly day: number;
  // months are 0 indexed, the others are 1 indexed
  private readonly BASE_HIJRI = new HijriDate(1442, 3, 20);
  readonly BASE_GREGORORIAN = new Date(2020, 11, 5);
  readonly MIN_YEAR = 1440;
  readonly MAX_YEAR = 1600;
  readonly YEARS: IntDict = {
    1440: [29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29],
    1441: [30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29],
    1442: [29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29],
    1443: [30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30],
    1444: [29, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30],
    1445: [29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30],
    1446: [29, 30, 30, 30, 29, 30, 30, 29, 29, 30, 29, 29],
    1447: [30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 30, 29],
    1448: [29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30],
    1449: [29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29],
    1450: [30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29],
    1451: [30, 30, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30],
    1452: [30, 29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30],
    1453: [30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29],
    1454: [30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29],
    1455: [29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30],
    1456: [29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29],
    1457: [30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 30],
    1458: [29, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30],
    1459: [29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30],
    1460: [29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30],
    1461: [29, 30, 30, 29, 30, 29, 30, 29, 30, 30, 29, 29],
    1462: [30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29],
    1463: [29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30],
    1464: [29, 30, 29, 29, 30, 29, 29, 30, 30, 30, 29, 30],
    1465: [30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30],
    1466: [30, 30, 29, 30, 29, 29, 29, 30, 29, 30, 30, 29],
    1467: [30, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30],
    1468: [29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29],
    1469: [29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30],
    1470: [29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29],
    1471: [30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30],
    1472: [29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30],
    1473: [29, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30],
    1474: [29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29],
    1475: [29, 30, 30, 29, 30, 30, 30, 29, 29, 30, 29, 29],
    1476: [30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29],
    1477: [29, 30, 29, 29, 30, 30, 30, 30, 29, 30, 29, 30],
    1478: [29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29],
    1479: [30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29],
    1480: [30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29],
    1481: [30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29],
    1482: [30, 29, 30, 30, 30, 30, 29, 30, 29, 29, 30, 29],
    1483: [29, 30, 29, 30, 30, 30, 29, 30, 30, 29, 29, 30],
    1484: [29, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29],
    1485: [30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30],
    1486: [29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30],
    1487: [30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    1488: [30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    1489: [30, 29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 30],
    1490: [29, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29],
    1491: [30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30],
    1492: [29, 30, 29, 29, 30, 30, 29, 30, 29, 30, 30, 29],
    1493: [30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 30],
    1494: [29, 30, 29, 30, 29, 30, 29, 29, 29, 30, 30, 30],
    1495: [29, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30],
    1496: [29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30],
    1497: [30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30],
    1498: [29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29],
    1499: [30, 29, 30, 29, 29, 30, 30, 29, 30, 29, 30, 30],
    1500: [29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30],
    1501: [30, 29, 30, 29, 30, 29, 29, 29, 30, 29, 30, 30],
    1502: [30, 30, 29, 30, 29, 30, 29, 29, 29, 30, 30, 29],
    1503: [30, 30, 29, 30, 30, 29, 30, 29, 29, 29, 30, 30],
    1504: [29, 30, 29, 30, 30, 30, 29, 29, 30, 29, 30, 29],
    1505: [30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29],
    1506: [29, 30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 30],
    1507: [29, 29, 30, 29, 29, 30, 30, 29, 30, 29, 30, 30],
    1508: [30, 29, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30],
    1509: [30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30],
    1510: [30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29],
    1511: [30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30],
    1512: [29, 30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30],
    1513: [29, 29, 29, 30, 29, 30, 30, 30, 29, 30, 30, 29],
    1514: [30, 29, 29, 29, 30, 29, 30, 30, 29, 30, 30, 30],
    1515: [29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30],
    1516: [29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30],
    1517: [29, 30, 29, 30, 29, 30, 30, 29, 29, 30, 29, 30],
    1518: [29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29],
    1519: [30, 29, 29, 30, 30, 30, 29, 30, 30, 29, 30, 29],
    1520: [29, 30, 29, 29, 30, 30, 30, 29, 30, 30, 29, 30],
    1521: [29, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30],
    1522: [30, 29, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29],
    1523: [30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29],
    1524: [30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29],
    1525: [30, 30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30],
    1526: [29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29],
    1527: [30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29],
    1528: [30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30],
    1529: [29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30],
    1530: [29, 30, 30, 29, 29, 30, 29, 30, 29, 29, 30, 30],
    1531: [29, 30, 30, 30, 29, 29, 30, 29, 30, 29, 29, 30],
    1532: [29, 30, 30, 30, 29, 30, 30, 29, 29, 29, 30, 29],
    1533: [30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30],
    1534: [29, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29],
    1535: [30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30],
    1536: [29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30],
    1537: [30, 29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30],
    1538: [30, 30, 29, 30, 30, 29, 29, 30, 29, 29, 30, 29],
    1539: [30, 30, 30, 29, 30, 30, 29, 29, 30, 29, 29, 30],
    1540: [29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29],
    1541: [30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 29, 30],
    1542: [29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30],
    1543: [29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30],
    1544: [30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30],
    1545: [30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 29, 30],
    1546: [30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 29],
    1547: [30, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29],
    1548: [30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30],
    1549: [29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 29],
    1550: [30, 29, 30, 29, 29, 29, 30, 30, 30, 29, 30, 30],
    1551: [29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30],
    1552: [30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30],
    1553: [30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29],
    1554: [30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30],
    1555: [29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29],
    1556: [30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30],
    1557: [29, 30, 29, 29, 29, 30, 29, 30, 30, 30, 30, 29],
    1558: [30, 29, 30, 29, 29, 29, 30, 29, 30, 30, 30, 29],
    1559: [30, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 29],
    1560: [30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30],
    1561: [29, 30, 30, 29, 30, 29, 30, 30, 29, 29, 30, 29],
    1562: [29, 30, 30, 29, 30, 29, 30, 30, 30, 29, 29, 30],
    1563: [29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 29],
    1564: [30, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30],
    1565: [29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30],
    1566: [30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    1567: [30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29],
    1568: [30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 29],
    1569: [30, 29, 30, 30, 30, 29, 30, 30, 29, 30, 29, 29],
    1570: [29, 30, 29, 30, 30, 29, 30, 30, 30, 29, 29, 30],
    1571: [29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29],
    1572: [30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29],
    1573: [30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    1574: [30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 29],
    1575: [30, 30, 30, 29, 30, 30, 29, 30, 29, 29, 29, 30],
    1576: [29, 30, 30, 29, 30, 30, 30, 29, 30, 29, 29, 29],
    1577: [30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29],
    1578: [29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30],
    1579: [29, 30, 29, 30, 29, 29, 30, 30, 29, 30, 29, 30],
    1580: [29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    1581: [30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    1582: [30, 30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 29],
    1583: [30, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29],
    1584: [29, 30, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29],
    1585: [29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30],
    1586: [29, 29, 30, 29, 30, 29, 29, 30, 30, 30, 29, 30],
    1587: [29, 30, 30, 29, 29, 29, 30, 29, 30, 29, 30, 30],
    1588: [30, 29, 30, 30, 29, 29, 29, 30, 29, 30, 29, 30],
    1589: [30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29],
    1590: [30, 29, 30, 30, 30, 29, 29, 30, 29, 30, 29, 30],
    1591: [29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29],
    1592: [30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29],
    1593: [30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29],
    1594: [30, 30, 29, 29, 30, 29, 29, 29, 30, 30, 30, 30],
    1595: [29, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 30],
    1596: [29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30],
    1597: [29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29],
    1598: [30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29],
    1599: [29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30],
    1600: [29, 29, 30, 29, 30, 29, 29, 30, 30, 30, 29, 30]
  }

  constructor(year: number, month: number, day: number) {
    this.doSupportYear(year);
    this.year = year;
    this.month = month;
    this.day = day;
  }

  toHijri(date: Date): HijriDate {
    return new HijriDate(1, 2, 3);
  }

  dayDiff(date2: HijriDate): number {
    this.doSupportYear(this.year);
    this.doSupportYear(date2.year);
    const comparison = this.compare(date2);
    if (comparison === 0) {
      return 0;
    }
    let daySum = 0;
    const bigDate = comparison > 0 ? this : date2;
    const smallDate = comparison < 0 ? this : date2;

    if (comparison === 1) {
      return bigDate.day - smallDate.day;
    }
    if (comparison == 2) {
      for (let m = smallDate.month; m < bigDate.month; m++) {
        daySum += this.YEARS[smallDate.year][m];
      }
      daySum -= smallDate.day;
      daySum += bigDate.day;
      return daySum;
    }
    if (comparison == 3) {
      for (let y = smallDate.year; y < bigDate.year; y++) {
        daySum += this.YEARS[y].reduce((a, b) => { return a + b; }, 0);
      }
      daySum -= this.YEARS[smallDate.year].slice(0, smallDate.month).reduce((a, b) => { return a + b }, 0);
      daySum -= smallDate.day;
      daySum += this.YEARS[bigDate.year].slice(0, smallDate.month).reduce((a, b) => { return a + b }, 0);
      daySum += bigDate.day;
      return daySum;
    }

    return -1;
  }

  doSupportYear(y: number): boolean {
    const isSupports = y >= 1440 && y <= 1600;
    if (!isSupports) {
      throw "Currently hijri years from " + this.MIN_YEAR + " to " + this.MAX_YEAR + " are supported";
    }
    return true;
  }

  // return positive if `this` is greater, 0 if equal, negative if smaller
  compare(d: HijriDate) {
    if (this.year > d.year) {
      return 3;
    } else if (d.year > this.year) {
      return -3;
    }

    if (this.month > d.month) {
      return 2;
    } else if (d.month > this.month) {
      return -2;
    }

    if (this.day > d.day) {
      return 1;
    } else if (d.day > this.day) {
      return -1;
    }
    return 0;
  }

}